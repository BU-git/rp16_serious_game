@using System.Security.Claims
@using Domain.Entities
@model WebUI.ViewModels.Task.TaskListViewModel

@{
    ViewData["Title"] = "Task List";
}

@{
    bool isCoach = Context.User.IsInRole("Coach");
    string userId = Context.User.GetUserId();
}


<style>
    /* Remove the colored rectangle on the map */
    svg > g > g > path {
        display: none;
    }

    svg > g > g > rect {
        display: none;
    }

    svg > g > g > g > text {
        display: none;
    }

    #geochart-colors {
        margin-left: -1.5%;
        width: 101%;
    }

    #circularButton {
        position: fixed;
        right: 50px;
        bottom: 40px;
    }

    #toTasks {
        position: fixed;
        right: 55px;
        bottom: 40px;
    }

    #mapDiv {
        top: -20px;
    }
</style>

<div class="ui segments" id="mapDiv">
    @if (isCoach)
    {
        <input type="hidden" value="ResolvedTasks" id="InitialTaskType" />
    }
    else
    {
        <input type="hidden" value="AssignedTasks" id="InitialTaskType" />
    }

    @if (isCoach)
    {
        <a class="ui positive circular icon button massive" id="circularButton" href="@Url.Action("AddTask", "Task", new {coachId = userId})">
            <i class="plus icon"></i>
        </a>
    }
    else
    {
        <!--Google chart-->
        <div id="geochart-colors"></div>

        <a class="ui icon button large inverted green" id="toTasks" href="#TaskTypeMenu">
            <i class="dropdown icon"></i>
        </a>
    }


    <div id="TaskTypeMenu" class="ui fluid three item menu">
        <a id="ResolvedTasks" class="item active">
            Resolved Tasks
        </a>
        <a id="AssignedTasks" class="item">
            Assigned Tasks
        </a>
        <a id="VerifiedTasks" class="item">
            Verified Tasks
        </a>

    </div>

    <div id="TaskListSection">

    </div>
</div>

@section Scripts{
    <script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>
    <script type="text/javascript" src="https://www.google.com/jsapi"></script>

    <script type="text/javascript">
        google.charts.load('current', { 'packages': ['geochart'] });
        google.charts.setOnLoadCallback(drawRegionsMap);

        var regions = [
            "NorthAmerica", "SouthAmerica", "Africa", "Europe",
            "Australia", "NorthAsia", "NearEast", "SouthAsia"
        ];

        function drawRegionsMap() {
            var data = google.visualization.arrayToDataTable([
                ['Region code', 'Continent', 'Color'],
                ['021', 'Northern America', 1],
                ['029', 'Caribbean', 1],
                ['013', 'Central America', 1],
                ['005', 'South America', 2],
                ['015', 'Northern Africa', 3],
                ['011', 'Western Africa', 3],
                ['017', 'Middle Africa', 3],
                ['014', 'Eastern Africa', 3],
                ['018', 'Southern Africa', 3],
                ['154', 'Northern Europe', 4],
                ['155', 'Western Europe', 4],
                ['039', 'Southern Europe', 4],
                ['053', 'Australia and New Zealand', 5],
                ['054', 'Melanesia', 5],
                ['057', 'Micronesia', 5],
                ['061', 'Polynesia', 5],
                ['151', 'Eastern Europe', 6],
                ['034', 'Southern Asia', 7],
                ['145', 'Western Asia', 7],
                ['143', 'Central Asia', 8],
                ['030', 'Eastern Asia', 8],
                ['035', 'South-Eastern Asia', 8],
            ]);

            var options = {
                displayMode: 'regions',
                region: 'world',
                resolution: 'subcontinents',
                backgroundColor: 'transparent',
                defaultRegionColor: '#00ffff',
                defaultColor: '#f5f5f5',
                legend: null,
                keepAspectRation: false,
                tooltip: {
                    trigger: 'none'
                },
                colorAxis: {
                    colors: ['green', '#FFA703', 'yellow', '#07B6F0', 'red', '#ED6F2F', '#A509AB', '#060CBF']
                }
            };

            var chart = new google.visualization.GeoChart(document.getElementById('geochart-colors'));
            chart.draw(data, options);
            google.visualization.events.addListener(chart, 'regionClick', mapClick);

            function mapClick(e) {
                var row = parseInt(data.getFilteredRows([{ column: 0, value: e.region }]));
                if (row >= 0 && row < 3) row = 0;
                else if (row == 3) row = 1;
                else if (row > 3 && row < 9) row = 2;
                else if (row >= 9 && row < 12) row = 3;
                else if (row >= 12 && row < 16) row = 4;
                else if (row == 16) row = 5;
                else if (row > 16 && row < 19) row = 6;
                else if (row >= 19 && row < 22) row = 7;
                else return;

                window.location.replace('@Url.Action("ViewTasksByRegion", "Task")?region=' + regions[row]);
                return;
            }
        };

        $('#TaskTypeMenu').on('click', 'a', function () {
            var $j = jQuery.noConflict();

            $j(this).addClass('active').siblings().removeClass('active');
            var taskType = $j(this).attr('id');
            ChangeTaskType(taskType);
        });

        $(document).ready(function () {
            var $j = jQuery.noConflict();

            var TaskType = $j('#InitialTaskType').val();
            $j('#' + TaskType).addClass('active').siblings().removeClass('active');

            ChangeTaskType(TaskType);
        });

        function ChangeTaskType(taskType) {
            var $j = jQuery.noConflict();

            $j.get('/Task/PartialTaskList?type=' + taskType,
                function (data) {

                    $j('#TaskListSection').html(data);
                    $j('#TaskListSection').fadeIn('fast');
                });
        }

    </script>

}